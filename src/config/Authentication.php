<?php

use Kreait\Firebase\Factory;
use Firebase\Auth\Token\Exception\InvalidToken;

class Authentication {
    
    public function authenticate($request) {
        // Configure Firebase
        $factory = (new Factory)->withServiceAccount('../src/config/findhandyman-f0b74-4d16b7fd9ffb.json');
        // Get an instance of the Firebase Authentication class
        $auth = $factory->createAuth();

        // Get the Firebase Authentication idToken 
        // from the Authorization header
        // idToken is generated by the client's Firebase SDK
        $authHeader = $request->getHeader("Authorization");
        $idTokenString  = $this->getTokenFromAuthHeader($authHeader);

        // Holds the response
        $res = getResponseStruct();

        // Verify the idToken
        try {
            $verifiedIdToken = $auth->verifyIdToken($idTokenString);
            $uid = $verifiedIdToken->getClaim('sub');
            $user = $auth->getUser($uid);

            $res['status']['code'] = 200;
            $res['data'] = $user;
        } catch (\InvalidArgumentException $e) {
            $res['status']['code'] = 401;
            $res['status']['msg'] = 'The token could not be parsed: '.$e->getMessage();
        } catch (InvalidToken $e) {
            $res['status']['code'] = 401;
            $res['status']['msg'] = 'The token is invalid: '.$e->getMessage();
        }

        return $res;
    }

    function getTokenFromAuthHeader($authHeader){
        if ($authHeader[0]) {
            //return explode(" ", $authHeader[0])[1];
            $headers = explode(" ", $authHeader[0]);
            return end($headers);
        } else {
            return "";
        }
    }

}


?>